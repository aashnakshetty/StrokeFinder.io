library(dplyr)
data("airquality")
print(head(airquality))
print(summary(airquality))
print(str(airquality))
#Boxplot
par(mar = c(5,4,4,2))
x11(width = 2, height = 20)
par(mfrow = c(1,1))
boxplot(airquality, main = "Airquality Boxplot", col = "lightblue", outline = TRUE)
#IQR
for(col in names(airquality)[sapply(airquality, is.numeric)]){
Q1 <- quantile(airquality[[col]],0.25, na.rm = TRUE)
Q3 <- quantile(airquality[[col]],0.75, na.rm = TRUE)
IQR <- Q3-Q1
inner_fence <- c(Q1 - 1.5*IQR, Q3 + 1.5*IQR)
outer_fence <- c(Q3-3*IQR, Q3+3*IQR)
cat(sprintf("/n%s:/nQ1 = %2.f, Q3 = %2.f, IQR = %2.f", col, Q1, Q3, IQR))
cat(sprintf("/nInner fence = [%.2f, %.2f]", inner_fence[1], inner_fence[2])
cat(sprintf("/nOuter fence = [%.2f, %.2f]", outer_fence[1], outer_fence[2])
cat(sprintf("\nInner fence = [%.2f, %.2f]", inner_fence[1], inner_fence[2]))
outer_fence <- c(Q3-3IQR, Q3+3IQR)
q()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
cat("Correlation (Sepal Length vs Sepal Width)", correlation_iris, "\n")
pairs(iris[1:4], main = "Pairwise scatter plot for iris data", pch = 21, bg = c("pink", "coral", "palegreen")[iris$Species])
correlation_analysis <- cor(iris[, sapply(iris, is.numeric)])
print("correlation_analysis")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
corr_output <- function(){
x11(width = 20, height = 20)
corrplot(correlation_analysis, method = "circle", type = "lower")
}
corr_output()
source("~/.active-rstudio-document")
corr_output <- function(){
par(mar = c(5,4,4,2))
corrplot(correlation_analysis, method = "circle", type = "upper")
}
corr_output()
corr_output <- function(){
par(mar = c(5,4,4,2))
corrplot(correlation_analysis, method = "circle", type = "upper")
}
corr_output()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
plot2<-
ggplot(storms_cleaned, aes(x = lat, y=long))+
geom_point(aes(color=category),alpha = 0.6, size = 2)+
color_scale_gradient(low = "pink", high = "lightblue")+
labs(
main = "Lat vs Long",
xlab = "Long",
ylab = "Lat",
color = "Storm Category"
)
plot2<-
ggplot(storms_cleaned, aes(x = lat, y=long))+
geom_point(aes(color=category),alpha = 0.6, size = 2)+
scale_color_gradient(low = "pink", high = "lightblue")+
labs(
main = "Lat vs Long",
xlab = "Long",
ylab = "Lat",
color = "Storm Category"
)
theme_minimal()
par(mar = c(5,4,4,1))
x11(width = 20, height = 20)
print(plot2)
ggsave("lat_vs_long.jpg", plot = plot2, width = 2, height = 10)
#Craete the function
analyse_dataset <- function(dataset, dataset_name){
cat("\n-------------------"\n)
#Craete the function
analyse_dataset <- function(dataset, dataset_name){
cat("\n-------------------\n")
cat("Five number summary for", dataset_name, "\n")
cat("\n-------------------\n")
}
numeric_data <- dataset[sapply(dataset, is.numeric)]
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# Call the function
analyse_dataset(dataset, "Sample dataset")
data(quakes)
analyse_dataset(quakes, "Earthquakes (quakes)")
data(swiss)
analyse_dataset(swiss, "Swiss")
analyse_dataset(swiss, "Swiss")
analyse_dataset(swiss, "Swiss")
data(ChickWeights)
analyse_dataset(ChickWeights, "ChickWeights")
data(ChickWeights)
analyse_dataset(ChickWeights, "ChickWeights")
data(ChickWeight)
analyse_dataset(ChickWeight, "ChickWeights")
data(trees)
analyse_dataset(trees, "trees")
data("WorldPhones")
analyse_dataset(WorldPhones, "trees")
data("WorldPhones")
WorldPhones_df <- as.data.frame(WorldPhones)
analyse_dataset(WorldPhones_df, "trees")
economics<-ggplot2::(economics)
library(ggplot2)
economics<-ggplot2::(economics)
economics<-ggplot2::economics
analyse_dataset(economics, "Swiss")
library(lattice)
data(iris)
Species.f <- factor(iris$Species, levels = unique(iris$Species), labels = unique(iris$Species))
windows()
print(densityplot(~Sepal.Length, main = "Density Plot", xlab = "density"))
library(lattice)
data("iris")
Species.f <- factor(iris$Species, levels = unique(iris$Species), labels = unique(iris$Species))
windows()
print(densityplot(~Sepal.Length, main = "Density Plot", xlab = "density"))
source("~/.active-rstudio-document")
windows()
print(densityplot(~Sepal.Length | Species.f, data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(bwplot(Species ~ Sepal.Length,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))))
windows()
print(bwplot(Species ~ Sepal.Length,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(xyplot(Sepal.Length ~ Sepal.Width| Species.f,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(xyplot(Sepal.Length ~ Sepal.Width * Petal.Length| Species.f,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(cloud(Sepal.Length ~ Sepal.Width * Petal.Length| Species.f,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(dotplot(Species.f ~ Sepal.Length,
data = iris,
main = "Density plot by species",
xlab = "Sepal Length",
ylab = "Density"))
windows()
print(splom(iris[c(1,2,3,4)], main = "Iris Data"))
library(plumber)
r <- plumb("plumber.r")
r <- plumb("plumber.r")
plumb(file='C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project/plumber.R')$run()
library(plumber)
r <- plumb("plumber.r")
getwd()
setwd("C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project/plumber.R")
setwd("C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project")
library(plumber)
getwd()
r <- plumb("plumber.r")
r$run(port = 8000)
setwd("C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project")
library(plumber)
r <- plumb("plumber.r")
r$run(port = 8000)
setwd("C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project")
> library(plumber)
setwd("C:/Users/Sowmya Shetty/Desktop/Projects/Stroke Project")
library(plumber)
r <- plumb("plumber.r")
r$run(port = 8000)
